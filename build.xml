<?xml version="1.0"?>

<project name="runtests" default="qa" basedir=".">

  <target name="clean">
    <delete dir="_compare" />
    <delete dir="_coverage" />
    <delete dir="_docs" />
    <delete dir="_sniff" />
    <delete dir="QA/ext" />
    <delete dir="QA/sapi" />
    <delete dir="QA/tests" />
    <delete dir="QA/Zend" />
    <delete>
    	<fileset dir="phpt-tests" includes="*.out" />
    	<fileset dir="phpt-tests" includes="*.exp" />
    	<fileset dir="phpt-tests" includes="*.diff" />
    	<fileset dir="phpt-tests" includes="*.log" />
    	<fileset dir="phpt-tests" includes="*.sh" />
    	<fileset dir="phpt-tests" includes="*.post" />
    	<fileset dir="phpt-tests" includes="*.php" />
    </delete>
  </target>

  <target name="qa" depends="lint, test, coverage, compare, doc" description="Perform quality assurance.">
  </target>
  
  <target name="doc" description="Create API documentation in _docs/html/.">
    <delete dir="_docs" />
    <exec command="doxygen" checkReturn="true"/>
  </target>

  <target name="lint" description="Lint check all PHP files.">
    <phplint haltonfailure="true">
      <fileset dir="src">
        <include name="*.php"/>
        <include name="**/*.php"/>
      </fileset>
    </phplint>
  </target>

  <target name="test" description="Run all unit tests.">
    <delete dir="_coverage" />
    <exec command="phpunit tests" passthru="true" checkReturn="true"/>
  </target>

  <target name="coverage" description="Create code coverage report in _coverage.">
    <delete dir="_coverage" />
    <exec command="phpunit --coverage-html _coverage tests" />
  </target>

  <target name="compare" description="Old/New comparison of phpt results.">
    <fail unless="php" message="Path to standard PHP executable not defined, use -Dphp=/path/to/php" />
    <fail unless="php_to_test" message="Path to test PHP source dir not defined, use -Dphp_to_test=/path/to/php_source_dir" />


    <delete dir="_compare" />
    <mkdir dir="_compare" />

    <delete dir="/tmp/phpruntests" />
    <mkdir dir="/tmp/phpruntests" />

    <copy file="${project.basedir}/QA/QATESTS.tgz" tofile="/tmp/phpruntests/QATESTS.tgz" />

    <exec command="tar xfz QATESTS.tgz" dir="/tmp/phpruntests" />

    <exec command="${php} -n ${php_to_test}/run-tests.php -n -p ${php_to_test}/sapi/cli/php /tmp/phpruntests/Zend /tmp/phpruntests/ext /tmp/phpruntests/sapi /tmp/phpruntests/tests > ${project.basedir}/_compare/old.out" dir="/tmp/phpruntests" passthru="true" checkReturn="true"/>
    <exec command="${php} -n ${project.basedir}/src/run-tests.php -n -p ${php_to_test}/sapi/cli/php -o csv -s ${project.basedir}/_compare/new.out /tmp/phpruntests" dir="/tmp/phpruntests" passthru="true" checkReturn="true" />
    
    <exec command="${php} -n QA/compareNewOld.php ${project.basedir}/_compare/new.out ${project.basedir}/_compare/old.out phpruntests > ${project.basedir}/_compare/compare_new_old.out" dir="${project.basedir}" passthru="true" checkReturn="true"/>
    
    <exec command="${php} -n QA/compareNewNew.php ${project.basedir}/QA/BaselineLinuxResults ${project.basedir}/_compare/new.out phpruntests > ${project.basedir}/_compare/compare_baseline_old.out" dir="${project.basedir}" passthru="true" checkReturn="true"/>
  </target>

  <target name="sniff" description="Run all PHP_CodeSniffer sniffs.">
    <delete dir="_sniff" />
    <mkdir dir="_sniff" />
    
    <exec command="phpcs -n --extensions=php --report=full src > ${project.basedir}/_sniff/sniff.out" passthru="true"/>
  </target>

</project>
